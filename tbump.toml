# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/softbutterfly/wagtail-sb-socialnetworks/"

[version]
current = "0.0.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (
    -
    (?P<channel>alpha|beta|rc)
    (?P<release>\d+)
  )?
'''

[git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[file]]
src = 'pyproject.toml'
search = 'version = "{current_version}"'

[[file]]
src = 'pyproject.toml'
search = 'v{current_version}.tar.gz'

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made
[[before_commit]]
name = "check changelog"
cmd = "grep -q {new_version} CHANGELOG.md"

[[before_commit]]
name = "check changelog"
cmd = "grep -q {new_version} CHANGELOG.md"

# Or run some commands after the git tag and the branch
# have been pushed:
[[after_push]]
name = "Build package"
cmd = "poetry build"

[[after_push]]
name = "Publish to PyPI"
cmd = "poetry publish"
